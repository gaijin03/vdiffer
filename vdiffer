#!/usr/bin/perl -w
#use strict;
use Getopt::Long;

#Author Brian Christiansen
# USAGE: [--revision <revision>] [--vim] [--kom] [FILE]
# default is to use gvim but will use vim if ssh'ed in.

my @hgDiff;
my @modFiles;
my $tmpOrig = "tmporig";
my $tmpFile = "tmpfile";
my $tmpDiff = "tmpdiff";
my $vim; #default gvim
my $kompare; #default gvim
my $revision;

my $result = GetOptions ("vim" => \$vim,
                         "kom" => \$kompare,
                         "revision=i" => \$revision);


$vim = 1 if (defined $ENV{"SSH_CONNECTION"});

if ($ARGV[0])
{
  my $file = $ARGV[0]; 
  die "$file doesn't exist. $!\n" unless (-e $file);
  DiffFile($file);
}
else
{
  my $hgdiffcmd;

  if (defined $revision)
  {
    $hgdiffcmd = "hg diff -c $revision";
  } else {
    $hgdiffcmd = "hg diff";
  }

  @hgDiff = `$hgdiffcmd`;

  if (defined $kompare)
  {
    `hg diff > $tmpFile`;
    system("kompare $tmpFile");
  }
  else
  {
    map { push @modFiles, $1 if m/^--- a\/(\S+)\s+/ } @hgDiff;

    foreach my $file (@modFiles){
    
      DiffFile($file);
    }
  }
}

exit 0;

sub DiffFile
{
  my $file = $_[0];
  my $cstring = "";
  my $rstring = "";
  my $diffCmd = "";

  if (defined $revision)
  {
    $cstring = "-c $revision";
    $rstring = "-r $revision";
  }

  if (defined $revision)
  {
  `hg cat $rstring $file > $tmpOrig`;
  }
  else
  { # need current file with changes.
  `cp $file $tmpOrig`;
  }

  `cp $tmpOrig $tmpFile`;
  `hg diff $cstring $file > $tmpDiff`;
  `patch -R -p1 $tmpFile $tmpDiff`;

  if (defined $vim)
  {
    $diffCmd = "vimdiff";
  }
  else
  { # -f prevents gvim from forking
    $diffCmd = "gvimdiff -f"; 
  }
  
  # When diffing local changes the original must be used so 
  # changes can be made in the original.
  if (defined $revision) 
  {
    system("$diffCmd $tmpOrig $tmpFile");
  }
  else
  {
    system("$diffCmd $file $tmpFile");
  }
}

